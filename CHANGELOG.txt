Author: Wasim Surjo
BayzDelivery Application Changelog
================================

This changelog documents the changes I made to the BayzDelivery application........

1. .gitignore
-------------
Added: .vscode/*
Reason: To ignore VS Code specific files and settings.

2. build.gradle
--------------
Added Dependencies:
- org.:-api
- ch.qos.logback:logback-classic

Reason: Added logging dependencies to enable proper logging.

3. BayzDeliveryApplication.java
------------------------------
Changes:
- Added Logger
- Added logging statements for app startup

4. DeliveryController.java
-------------------------
Changes:
- Improved error handling with try-catch blocks
- Improved readability by updating names and mappings
- Added detailed logging messages
- Improved response handling
- Split delivery creation into two endpoints: /delivery/order and /delivery/complete
- Added new endpoint for getting top delivery men
- Added proper date/time formatting for API parameters

5. PersonController.java
-----------------------
Changes:
- Improved error handling with try-catch blocks
- Improved readability by updating names and mappings
- Added detailed logging messages
- Improved response handling

6. GlobalExceptionHandler.java
-----------------------------
Changes:
- Renamed LOG to log for better readability
- Added specific handler for ResponseStatusException
- Improved error messages and logging
- Changed default error status from BAD_REQUEST to INTERNAL_SERVER_ERROR
- Added specific handler for DataIntegrityViolationException
- Added user-friendly error messages for database constraint violations
- Improved HTTP status codes for different types of errors

7. Delivery.java
---------------
Changes:
- Fixed typo in field name: comission â†’ commission
- Updated getter/setter methods for commission
- Added orderId field with proper validation
- Updated toString() method to include orderId
- Updated equals() and hashCode() methods to include orderId
- Made price and customer fields @NotNull
- Removed @NotNull from endTime field

8. Person.java
-------------
Changes:
- Added new field 'role' of type PersonRole (enum)
- Added @NotNull validation
- Added @Enumerated(EnumType.STRING) annotation
- Added getter/setter methods for role

9. DeliveryServiceImpl.java
--------------------------
Changes:
- Added validation logic for deliveries
- Added commission calculation logic
- Added checks for concurrent deliveries
- Added role-based validation
- Added time validation
- Added price and distance validation
- Split save() method into createOrder() and completeDelivery()
- Improved concurrent delivery check using database query
- Added method to get top delivery men by commission
- Added proper validation for customer and delivery man roles
- Improved commission calculation with proper rounding

10. PersonServiceImpl.java
-------------------------
Changes:
- Improved error handling
- Simplified the getAll() method
- Added better null handling

11. application.yml
------------------
Added Spring DevTools Configuration:
- Enabled auto-restart

Reason: Improved development experience with hot reloading capabilities.

12. db.changelog-master.xml
--------------------------
Added new changelog files:
- Added changelog-0000004.xml for order_id field
- Added changelog-0000005.xml for role-based changes
- Added changelog-0000006.xml for unique constraints
- Updated schema version from 3.4 to 4.1

13. DeliveryRepository.java
--------------------------
Changes:
- Changed from CrudRepository to JpaRepository
- Added findByOrderId query method
- Added hasConcurrentDelivery query for checking overlapping deliveries
- Added findTopDeliveryMenByCommission query for performance metrics
- Added proper parameter annotations
- Added @Repository annotation

Summary of Major Improvements:
----------------------------
1. Added comprehensive logging throughout the application
2. Improved error handling and validation
3. Added role-based functionality
4. Fixed typos and inconsistencies
5. Added essential logic for deliveries
6. Improved development experience
7. Enhanced code organization and clarity
8. Added database schema changes
9. Split delivery creation into two-phase process
10. Added proper concurrent delivery validation
11. Added performance metrics for delivery men
12. Improved database constraints and validations
13. Added user-friendly error messages

Avoided Changes (But Had in Mind):
-----------------------------
1. Renaming PERSON to USER 
2. Using a static variable to track delivery status instead of time based calculation
3. Different Types of Exception Handling

